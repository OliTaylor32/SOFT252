/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package guis;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Oli
 */
public class AdminDashboard extends javax.swing.JFrame {

    private File textFile = new File("test/Data.txt");
    /**
     * Creates new form AdminDashboard
     */
    public AdminDashboard() {
        initComponents();
    }
    //Return a unique user ID by checking file for one that isn't in use, and iterating until it finds one.
    private String GenerateID()
    {
        String id = "ERROR";
        char type;
        
        switch (cbx_createType.getSelectedIndex()){
            case 0:
                type = 'P';
                break;
            case 1:
                type = 'A';
                break;
            case 2:
                type = 'D';
                break;
            case 3:
                type = 'S';
                break;
            default:
                type = 'P';
                break;
                
        }
        
        try {
            Scanner scan = new Scanner(textFile);
            boolean free = true;
            id = "P";
            for (int i = 1; i < 10; i++) {
                free = true;
                while(scan.hasNextLine() == true)
                    if (scan.nextLine().equals(type + "000" + Integer.toString(i))) {
                        free = false;
                        break;
                    }  
                if (free == true) {
                    id = type + "000" + Integer.toString(i);
                    break;
                }
            }
            if ("ERROR".equals(id)) {
                for (int i = 10; i < 100; i++) {
                    free = true;
                    while(scan.hasNextLine() == true)
                        if (scan.nextLine().equals(type + "00" + Integer.toString(i))) {
                            free = false;
                            break;
                        }  
                    if (free == true) {
                        id = type + "00" + Integer.toString(i);
                        break;
                    }
                }   
            }
            if ("ERROR".equals(id)) {
                for (int i = 100; i < 1000; i++) {
                    free = true;
                    while(scan.hasNextLine() == true)
                        if (scan.nextLine().equals(type + "0" + Integer.toString(i))) {
                            free = false;
                            break;
                        }  
                    if (free == true) {
                        id = type + "0" + Integer.toString(i);
                        break;
                    }
                }   
            }
            
            if ("ERROR".equals(id)) {
                for (int i = 1000; i < 10000; i++) {
                    free = true;
                    while(scan.hasNextLine() == true)
                        if (scan.nextLine().equals(type + Integer.toString(i))) {
                            free = false;
                            break;
                        }  
                    if (free == true) {
                        id = type + Integer.toString(i);
                        break;
                    }
                }   
            }

            
        } catch (FileNotFoundException ex) {
            Logger.getLogger(SecretaryDashboard.class.getName()).log(Level.SEVERE, null, ex);
        }
        return id;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel11 = new javax.swing.JLabel();
        lbl_feedbackTitle = new javax.swing.JLabel();
        lbl_feedbackID = new javax.swing.JLabel();
        txt_feedbackID = new javax.swing.JTextField();
        txt_feedback = new javax.swing.JTextField();
        lbl_feedback = new javax.swing.JLabel();
        btn_feedbackSubmit = new javax.swing.JToggleButton();
        lbl_createAcc = new javax.swing.JLabel();
        lbl_createType = new javax.swing.JLabel();
        cbx_createType = new javax.swing.JComboBox<>();
        lbl_createFName = new javax.swing.JLabel();
        lbl_SName = new javax.swing.JLabel();
        txt_createFName = new javax.swing.JTextField();
        txt_createSName = new javax.swing.JTextField();
        lbl_createAddress = new javax.swing.JLabel();
        txt_createAddress = new javax.swing.JTextField();
        lbl_createAge = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txt_createAge = new javax.swing.JTextField();
        cbx_createGender = new javax.swing.JComboBox<>();
        lbl_createPassword = new javax.swing.JLabel();
        txt_createPassword = new javax.swing.JTextField();
        lbl_delAcc = new javax.swing.JLabel();
        btn_createSubmit = new javax.swing.JToggleButton();
        lbl_delID = new javax.swing.JLabel();
        txt_delID = new javax.swing.JTextField();
        btn_delAcc = new javax.swing.JToggleButton();

        jLabel11.setText("jLabel11");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lbl_feedbackTitle.setText("Provide Feedback:");

        lbl_feedbackID.setText("Doctor ID:");

        lbl_feedback.setText("Feedback:");

        btn_feedbackSubmit.setText("Submit");
        btn_feedbackSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_feedbackSubmitActionPerformed(evt);
            }
        });

        lbl_createAcc.setText("Create Accounts:");

        lbl_createType.setText("Account Type:");

        cbx_createType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Patient", "Admin", "Doctor", "Secretary" }));

        lbl_createFName.setText("First Name:");

        lbl_SName.setText("Last Name:");

        lbl_createAddress.setText("Address:");

        lbl_createAge.setText("Age:");

        jLabel10.setText("Gender:");

        cbx_createGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female" }));

        lbl_createPassword.setText("Password:");

        lbl_delAcc.setText("Delete Accounts:");

        btn_createSubmit.setText("Submit");
        btn_createSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_createSubmitActionPerformed(evt);
            }
        });

        lbl_delID.setText("ID:");

        btn_delAcc.setText("Delete");
        btn_delAcc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_delAccActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(btn_delAcc)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lbl_feedback, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_feedback))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(btn_feedbackSubmit))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lbl_createAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_createAddress))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lbl_createAge, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_createAge, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(77, 77, 77)
                                .addComponent(lbl_createPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_createPassword))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbx_createGender, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btn_createSubmit))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbl_feedbackTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lbl_feedbackID, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txt_feedbackID, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(lbl_createAcc, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lbl_delAcc, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lbl_delID, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txt_delID, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lbl_createType, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(cbx_createType, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(lbl_createFName, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txt_createFName, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addComponent(lbl_SName, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txt_createSName, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbl_feedbackTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_feedbackID)
                    .addComponent(txt_feedbackID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_feedback, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_feedback))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btn_feedbackSubmit)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbl_createAcc)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_createType)
                    .addComponent(cbx_createType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_createFName)
                    .addComponent(lbl_SName)
                    .addComponent(txt_createFName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_createSName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_createAddress)
                    .addComponent(txt_createAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_createAge)
                    .addComponent(txt_createAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_createPassword)
                    .addComponent(txt_createPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(cbx_createGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_createSubmit))
                .addGap(26, 26, 26)
                .addComponent(lbl_delAcc)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_delID)
                    .addComponent(txt_delID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_delAcc)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    //Delete an account by finding the ID in the text file, and then deleting all information of that account
    private void btn_delAccActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_delAccActionPerformed
        try {
            Scanner scan;
            
            scan = new Scanner(textFile);
            int lineCount = 0;
            
            while(scan.hasNextLine())
            {
                scan.nextLine();
                lineCount++;
            }
            
            scan.close();
            
            String[] data = new String[lineCount];
            scan = new Scanner(textFile);
            int i = 0;
            boolean found = false;
            while(scan.hasNextLine())
            {
                data[i] = scan.nextLine();
                if (data[i].equals(txt_delID.getText()) && found == false)
                {
                    int delLines = 1;
                    found = true;
                    while(!(scan.nextLine().equals("End")))
                    {
                       delLines++;
                    }
                    String[] temp = new String[i];
                    temp = data;
                    data = new String[lineCount - delLines];
                    for (int j = 0; j < i; j++) {
                        data[j] = temp[j];
                    }
                    if (scan.hasNextLine()) {
                        data[i] = scan.nextLine();
                    }
                    else{
                        data[i] = "";
                    }

                }
                i++;
            }
            
            scan.close();
            //Overwrite the textfile with the new data
            try {
                FileWriter write = new FileWriter(textFile, false);
                write.flush();
                for (int j = 0; j < data.length - 1; j++) {
                    write.write(data[j]);
                    System.out.println(data[j]);
                    write.write(System.getProperty( "line.separator" ));
                }
                write.close();
                
                
            } catch (IOException ex) {
                Logger.getLogger(SecretaryDashboard.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(SecretaryDashboard.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btn_delAccActionPerformed
    //Create a new account by appending the textfile with the accounts data
    private void btn_createSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_createSubmitActionPerformed

        try
        {
            try (FileWriter write = new FileWriter(textFile, true)) {
                write.write(System.getProperty( "line.separator" ));
                write.write(GenerateID()); 
                write.write(System.getProperty( "line.separator" ));
                write.write(txt_createPassword.getText());
                write.write(System.getProperty( "line.separator" ));
                write.write(txt_createFName.getText());
                write.write(System.getProperty( "line.separator" ));
                write.write(txt_createSName.getText());
                write.write(System.getProperty( "line.separator" ));
                write.write(txt_createAddress.getText());
                write.write(System.getProperty( "line.separator" ));
                write.write(cbx_createGender.getItemAt(cbx_createGender.getSelectedIndex()).charAt(0));
                write.write(System.getProperty( "line.separator" ));
                write.write(txt_createAge.getText());
                if (cbx_createType.getItemAt(cbx_createType.getSelectedIndex()).charAt(0) == 'P') {
                    write.write(System.getProperty( "line.separator" ));
                    write.write("No Appointments");
                    write.write(System.getProperty( "line.separator" ));
                    write.write("Previous Appointments");
                    write.write(System.getProperty( "line.separator" ));
                    write.write("CurrentPrescription");
                }
                if (cbx_createType.getItemAt(cbx_createType.getSelectedIndex()).charAt(0) == 'D') {
                    write.write(System.getProperty( "line.separator" ));
                    write.write("No Feedback");
                }
                write.write(System.getProperty( "line.separator" ));
                write.write("End");
                write.close();
            }
        } 
        catch (IOException ex) 
        {
            Logger.getLogger(CreateAcc.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }//GEN-LAST:event_btn_createSubmitActionPerformed
    //Post feedback to doctor by finding location of old feedback and replacing it
    private void btn_feedbackSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_feedbackSubmitActionPerformed
        if(txt_feedbackID.getText().charAt(0) == 'D'){
            try {
                Scanner scan;

                scan = new Scanner(textFile);
                int lineCount = 0;

                while(scan.hasNextLine())
                {
                    scan.nextLine();
                    lineCount++;
                }

                scan.close();

                String[] data = new String[lineCount];
                scan = new Scanner(textFile);
                int i = 0;
                boolean found = false;
                while(scan.hasNextLine())
                {
                    data[i] = scan.nextLine();
                    if (data[i].equals(txt_feedbackID.getText()) && found == false)
                    {
                        found = true;
                        for (int j = 0; j < 6; j++) {
                        i++;
                        data[i] = scan.nextLine();
                        }
                        i++;
                        data[i] = txt_feedback.getText();
                        scan.nextLine();
                    }
                    i++;
                }

                scan.close();
                //Overwrite the textfile with the new data
                try {
                    FileWriter write = new FileWriter(textFile, false);
                    write.flush();
                    for (int j = 0; j < data.length; j++) {
                        write.write(data[j]);
                        System.out.println(data[j]);
                        write.write(System.getProperty( "line.separator" ));
                    }
                    write.close();


                } catch (IOException ex) {
                    Logger.getLogger(SecretaryDashboard.class.getName()).log(Level.SEVERE, null, ex);
                }

            } catch (FileNotFoundException ex) {
                Logger.getLogger(SecretaryDashboard.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btn_feedbackSubmitActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminDashboard().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton btn_createSubmit;
    private javax.swing.JToggleButton btn_delAcc;
    private javax.swing.JToggleButton btn_feedbackSubmit;
    private javax.swing.JComboBox<String> cbx_createGender;
    private javax.swing.JComboBox<String> cbx_createType;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel lbl_SName;
    private javax.swing.JLabel lbl_createAcc;
    private javax.swing.JLabel lbl_createAddress;
    private javax.swing.JLabel lbl_createAge;
    private javax.swing.JLabel lbl_createFName;
    private javax.swing.JLabel lbl_createPassword;
    private javax.swing.JLabel lbl_createType;
    private javax.swing.JLabel lbl_delAcc;
    private javax.swing.JLabel lbl_delID;
    private javax.swing.JLabel lbl_feedback;
    private javax.swing.JLabel lbl_feedbackID;
    private javax.swing.JLabel lbl_feedbackTitle;
    private javax.swing.JTextField txt_createAddress;
    private javax.swing.JTextField txt_createAge;
    private javax.swing.JTextField txt_createFName;
    private javax.swing.JTextField txt_createPassword;
    private javax.swing.JTextField txt_createSName;
    private javax.swing.JTextField txt_delID;
    private javax.swing.JTextField txt_feedback;
    private javax.swing.JTextField txt_feedbackID;
    // End of variables declaration//GEN-END:variables
}
