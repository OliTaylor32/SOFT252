/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package guis;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;

/**
 *
 * @author Oli
 */
public class DoctorDashboard extends javax.swing.JFrame {

    private String name;
    /**
     * Creates new form DoctorDashboard
     */
    public DoctorDashboard() {
        initComponents();
    }
    
    public void SetName(String fName, String sName){
        name = (fName + " " +sName);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel5 = new javax.swing.JLabel();
        lbl_app = new javax.swing.JLabel();
        lbl_appID = new javax.swing.JLabel();
        txt_appID = new javax.swing.JTextField();
        txt_appDate = new javax.swing.JTextField();
        lbl_appDate = new javax.swing.JLabel();
        txt_appDetail = new javax.swing.JTextField();
        lbl_appDetail = new javax.swing.JLabel();
        btn_appSubmit = new javax.swing.JButton();
        lbl_pre = new javax.swing.JLabel();
        lbl_preID = new javax.swing.JLabel();
        txt_preID = new javax.swing.JTextField();
        lbl_preMed = new javax.swing.JLabel();
        txt_preMed = new javax.swing.JTextField();
        lbl_preQuantity = new javax.swing.JLabel();
        txt_preQuantity = new javax.swing.JTextField();
        lbl_preDosage = new javax.swing.JLabel();
        txt_preDosage = new javax.swing.JTextField();
        lbl_preNotes = new javax.swing.JLabel();
        txt_preNotes = new javax.swing.JTextField();
        btn_preSubmit = new javax.swing.JButton();
        lbl_history = new javax.swing.JLabel();
        lbl_historyID = new javax.swing.JLabel();
        txt_historyID = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        lst_history = new javax.swing.JList<>();
        btn_historySearch = new javax.swing.JButton();

        jLabel5.setText("jLabel5");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lbl_app.setText("Make Appointments:");

        lbl_appID.setText("Patient ID:");

        lbl_appDate.setText("Date (DD/MM/YYYY)");

        lbl_appDetail.setText("Appointment Details:");

        btn_appSubmit.setText("Submit");
        btn_appSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_appSubmitActionPerformed(evt);
            }
        });

        lbl_pre.setText("Prescribe Medicine: ");

        lbl_preID.setText("Patient ID:");

        lbl_preMed.setText("Medicine:");

        lbl_preQuantity.setText("Quantity:");

        txt_preQuantity.setToolTipText("");

        lbl_preDosage.setText("Dosage:");

        lbl_preNotes.setText("Notes:");

        btn_preSubmit.setText("Submit");
        btn_preSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_preSubmitActionPerformed(evt);
            }
        });

        lbl_history.setText("View patient history:");

        lbl_historyID.setText("Patient ID:");

        jScrollPane1.setViewportView(lst_history);

        btn_historySearch.setText("Search");
        btn_historySearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_historySearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbl_preNotes, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_preNotes))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btn_appSubmit, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btn_preSubmit, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_app, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lbl_appID, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_appID, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lbl_appDate, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_appDate, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lbl_pre, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lbl_appDetail, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_appDetail, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lbl_preID, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txt_preID, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lbl_preQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txt_preQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lbl_preDosage, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txt_preDosage, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lbl_preMed, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txt_preMed, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(lbl_history, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 44, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lbl_historyID, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_historyID, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(btn_historySearch)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbl_app)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_appID)
                    .addComponent(txt_appID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_appDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_appDate))
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_appDetail)
                    .addComponent(txt_appDetail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_appSubmit)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbl_pre)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_preID)
                    .addComponent(txt_preID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_preMed)
                    .addComponent(txt_preMed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_preQuantity)
                    .addComponent(txt_preQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_preDosage)
                    .addComponent(txt_preDosage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_preNotes)
                    .addComponent(txt_preNotes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_preSubmit)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbl_history)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_historyID)
                            .addComponent(txt_historyID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btn_historySearch)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 185, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_appSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_appSubmitActionPerformed
    try {    
        File textFile = new File("D://SOFT252//SOFT252//Coursework//Data.txt");
            Scanner scan;
            
            scan = new Scanner(textFile);
            int lineCount = 0;
            
            while(scan.hasNextLine())
            {
                scan.nextLine();
                lineCount++;
            }
            
            scan.close();
            
            String[] data = new String[lineCount + 1];
            scan = new Scanner(textFile);
            int i = 0;
            boolean found = false;
            while(scan.hasNextLine())
            {
                data[i] = scan.nextLine();
                if (data[i].equals(txt_appID.getText()) && found == false)
                {
                    found = true;
                    for (int j = 0; j < 6; j++) {
                    i++;
                    data[i] = scan.nextLine();
                    }
                    i++;
                    data[i] = (txt_appDate.getText() + " " + name  + ": " + txt_appDetail.getText());
                }
                i++;
            }
            
            scan.close();
            
            try {
                FileWriter write = new FileWriter(textFile, false);
                write.flush();
                for (int j = 0; j < data.length; j++) {
                    write.write(data[j]);
                    System.out.println(data[j]);
                    write.write(System.getProperty( "line.separator" ));
                }
                write.close();
                
                
            } catch (IOException ex) {
                Logger.getLogger(SecretaryDashboard.class.getName()).log(Level.SEVERE, null, ex);
            }
    
        } catch (FileNotFoundException ex) {
            Logger.getLogger(SecretaryDashboard.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btn_appSubmitActionPerformed

    private void btn_preSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_preSubmitActionPerformed
    try {    
        File textFile = new File("D://SOFT252//SOFT252//Coursework//Data.txt");
            Scanner scan;
            
            scan = new Scanner(textFile);
            int lineCount = 0;
            
            while(scan.hasNextLine())
            {
                scan.nextLine();
                lineCount++;
            }
            
            scan.close();
            
            String[] data = new String[lineCount + 1];
            scan = new Scanner(textFile);
            int i = 0;
            boolean found = false;
            while(scan.hasNextLine())
            {
                data[i] = scan.nextLine();
                if (data[i].equals(txt_preID.getText()) && found == false)
                {
                    found = true;
                    while(!data[i].equals("CurrentPrescription")) {
                    i++;
                    data[i] = scan.nextLine();
                    }
                    i++;
                    data[i] = (txt_preMed.getText() + ", " + txt_preQuantity.getText() + ", " + txt_preDosage.getText());
                }
                i++;
            }
            
            scan.close();
            
            try {
                FileWriter write = new FileWriter(textFile, false);
                write.flush();
                for (int j = 0; j < data.length; j++) {
                    write.write(data[j]);
                    System.out.println(data[j]);
                    write.write(System.getProperty( "line.separator" ));
                }
                write.close();
                
                
            } catch (IOException ex) {
                Logger.getLogger(SecretaryDashboard.class.getName()).log(Level.SEVERE, null, ex);
            }
    
        } catch (FileNotFoundException ex) {
            Logger.getLogger(SecretaryDashboard.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btn_preSubmitActionPerformed

    private void btn_historySearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_historySearchActionPerformed
        if (txt_historyID.getText().charAt(0) == 'P') {
            try {
                File textFile = new File("D://SOFT252//SOFT252//Coursework//Data.txt");
                Scanner scan;
                scan = new Scanner(textFile);
                while(scan.hasNextLine())
                {
                    if (scan.nextLine().equals(txt_historyID.getText())){
                        for (int i = 0; i < 6; i++) {
                            scan.nextLine();
                        }
                        DefaultListModel listHistory;
                        listHistory = new DefaultListModel();
                        String nextLine = scan.nextLine();
                        while(!nextLine.equals("CurrentPrescription")){
                            listHistory.addElement(nextLine);
                            nextLine = scan.nextLine();
                        }
                        lst_history.setModel(listHistory);
                        break;
                    }
                }
            } catch (FileNotFoundException ex) {
                Logger.getLogger(DoctorDashboard.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btn_historySearchActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DoctorDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DoctorDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DoctorDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DoctorDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DoctorDashboard().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_appSubmit;
    private javax.swing.JButton btn_historySearch;
    private javax.swing.JButton btn_preSubmit;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbl_app;
    private javax.swing.JLabel lbl_appDate;
    private javax.swing.JLabel lbl_appDetail;
    private javax.swing.JLabel lbl_appID;
    private javax.swing.JLabel lbl_history;
    private javax.swing.JLabel lbl_historyID;
    private javax.swing.JLabel lbl_pre;
    private javax.swing.JLabel lbl_preDosage;
    private javax.swing.JLabel lbl_preID;
    private javax.swing.JLabel lbl_preMed;
    private javax.swing.JLabel lbl_preNotes;
    private javax.swing.JLabel lbl_preQuantity;
    private javax.swing.JList<String> lst_history;
    private javax.swing.JTextField txt_appDate;
    private javax.swing.JTextField txt_appDetail;
    private javax.swing.JTextField txt_appID;
    private javax.swing.JTextField txt_historyID;
    private javax.swing.JTextField txt_preDosage;
    private javax.swing.JTextField txt_preID;
    private javax.swing.JTextField txt_preMed;
    private javax.swing.JTextField txt_preNotes;
    private javax.swing.JTextField txt_preQuantity;
    // End of variables declaration//GEN-END:variables
}
